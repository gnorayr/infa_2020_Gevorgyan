import pygame
from pygame.draw import *
from random import randint
from math import pi, sin, cos

pygame.init()

FPS = 1
screen = pygame.display.set_mode((1200, 600))

BLACK = (0, 0, 0)
number = 2

v = 1
r = 70
N = range(number)


def new_ball():
    """draws number new balls"""
    global X, Y, A, V_x, V_y

    R = [randint(0, 255) for n in N]
    G = [randint(0, 255) for n in N]
    B = [randint(0, 255) for n in N]
    X = [randint(100, 1100) for n in N]
    Y = [randint(100, 500) for n in N]
    A = [randint(0, int(2 * pi * 100)) for i in N]
    V_x = [v * cos(a / 100) for a in A]
    V_y = [v * sin(a / 100) for a in A]
    for i in range(1000):
        screen.fill(BLACK)
        for x, y, a, v_x, v_y, n, red, green, blue in zip(X, Y, A, V_x, V_y, N, R, G, B):

            if x - r <= 0:
                V_x[n] = abs(v_x)
            if y - r <= 0:
                V_y[n] = abs(v_y)
            if x + r >= 1200:
                V_x[n] = -abs(v_x)
            if y + r >= 600:
                V_y[n] = -abs(v_y)

            ellipse(screen, (red, green, blue), (x - r, y - r, 2 * r, 2 * r))
            X[n] += v_x
            Y[n] += v_y
        pygame.display.update()


pygame.display.update()
clock = pygame.time.Clock()
finished = False

score_add = 0
score = 0
while not finished:
    clock.tick(FPS)
    new_ball()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True
        elif event.type == pygame.MOUSEBUTTONDOWN:
            mouse_x, mouse_y = pygame.mouse.get_pos()
            for n in N:
                if (mouse_x - X[n]) ** 2 + (mouse_y - Y[n]) ** 2 <= r ** 2:
                    score_add += 1

        """if score_add == 0:
            pygame.quit()
        else:
            score += score_add
            score_add = 0
            print("score =", score)"""

    pygame.display.update()

    screen.fill(BLACK)
pygame.quit()
